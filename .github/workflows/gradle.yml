# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Copy application.yml into runner       
      run: |
        echo "*****firebase.json content:*****"
        mkdir -p ./src/main/resources
        touch ./src/main/resources/application.yml
        touch ./src/main/resources/application-db.yml
        touch ./src/main/resources/application-local.yml
        echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
        echo "${{ secrets.APPLICATION_DB }}" > ./src/main/resources/application-db.yml
        echo "${{ secrets.APPLICATION_LOCAL }}" > ./src/main/resources/application-local.yml
        
    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "firebase.json"
        json: '{"type": "service_account", "project_id": "duck-s-dream", "private_key_id": "29ff247efd24f24ef4b34f9393a145febd494292", "private_key": "——BEGIN PRIVATE KEY——\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC8UAa1szeM1gE5\nmrbOUrKITGC+HQ/uyCSLpJg8IRXXVt0shEPg4FtJPU9OGCP4VfrNy8vDNJCHkGx8\nP4Yv1NLed6zOuNRjEWZf6nX3LfUeNI80metMbBqMIS0F8otHjJFrPN8Xu6sQb9j8\n6+D85FI8RX9pxBjtY/Si6DtXQPrJRqb9f7Wr2Se5PdzY0DyIAAd2yaxj/FQpiad5\ncoaz5LC/OHdLnlBz9ACWImSiKIi1mWaNg+QHsfAoPIiMPZW8WDm+uKTuZJ1faN/d\nhPBQ4iSnYQSYX4O9HjWpuEuuW04RkfLYMJSZrhLllGuMjYvsUtsqNWjJcusyyg/3\nWhErdyy9AgMBAAECggEACtLyv8jwXXkDkwMQlOVt+6WgPe0/uDLq3tf0JCimr7z/\nc4qauDdNJ/WNNGjw0Fpo0yFusea4lAI6Kh4goWkzQbRRS4SWOKeMYeEBLNcIatcM\nkDJ0suzXzcwuYVQiq1cqGKbkD+IqoAQ9zbPlN8QL8gjwnOy3nhWLvz1oA8jpYV5D\n8Qz1pHhvZ4J2SFG5Tq90kFQ+b8hFWn+Z5ZJO8X8MYCy6M3tsLMre+hp6kdJJJsrI\nAk/bHg9i53kFKj09wIZObeTuhIurjxa/exBLAt1iErvlqgZn8CiaYEoTPhc9hmWz\nzUvjWqL/zYtRF/r8aUD2MjQN2aOFH5k+GtF2yqdd4QKBgQDujT327t+jd9os3k0U\nhhfz+preB/LayzKDhpQGfDGqjGoq5YQQTJva1QtKzzb53/Y8WWP1HFhFUbv04Ice\naLALJH9DqnzEnoT205ITgMt2xvnnyRqcxShcJ3uBQKWaSL0vlMLpo1nzyvxo6cI/\nSssixJuGUu7oloUiorOynXUINQKBgQDKFhUd/KWHP9XfOYJvIdz7X9tv08zHIPoU\nCN+wadpy6sNDe2YvA3WFcRJvF3Sm4vY5SLmxwycKZbI2Evtx1oqOI3nYOnJW1UHK\nVZoagi5mpeR4FVRmN3cAqQLal2dN3wnBxLTphDO+Sz53KimIAq+DcigM49X8Aqhw\nSGDxM4tzaQKBgCxs92Y+VD3QOzxx5e71jg5s1FyXJF4ky3J9JKIUjPdTEQ6OEcsr\nSTc2x9SVxIpCcEwK5benILVAJH3VNrSuEGLy2BSU8ol3cBG7kw+4w6uKIM5OwHsD\nqKGI5NJMZMrX0wvCa44xUrY5TkqHhhpdZnlCHiik10NPjNnHbSnNcxclAoGAAJha\nDZGN5z0P4y1nLe6amP7qRYUJKFj3g5GXHwzgwM/iLVOytFa9RNxVYpBeHpOyh+6n\n5VceyVANW01pAifQlqSSGknpxkmwfOkNoCBcBJ9eceAWNIrbRdw5ju09N6R9gd2T\nbtCd2mScVXuBTc48OBXg+lC9c5WKa3I7Htq5AWkCgYBhwAViiOy0SUTln/iirzUK\n9p+bkoAUcl1+qpGpZCQ9qEvHd4elG6qXbbsQRByP6WpdZsJm1dcpFGZYhktcN89n\n8O8vxPM91htdxbyhHwRHyxG55EAEIvkplqm+HCYMnzYGM1YbbfRBvpwDhexbExCb\naI6WaNobmTaOqLe+DJLeSQ==\n——END PRIVATE KEY——\n", "client_email": "firebase-adminsdk-fbsvc@duck-s-dream.iam.gserviceaccount.com", "client_id": "100200789836008677910", "auth_uri": "https://accounts.google.com/o/oauth2/auth", "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40duck-s dream.iam.gserviceaccount.com", "universe_domain": "googleapis.com"}'
        dir: 'src/main/resources'
        
    - name: grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test
      
    # CD
    - name: docker image build
      run: docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/dreaming_duck .
      
      # DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/dreaming_duck:v2

    - name: Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          docker rmi ${{ secrets.DOCKER_USERNAME }}/dreaming_duck || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/dreaming_duck
          docker stop dreaming_duck || true
          docker rm dreaming_duck || true
          docker run -d --name dreaming_duck:v2 -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/dreaming_duck:v2

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
